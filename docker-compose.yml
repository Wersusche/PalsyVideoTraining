version: "3.9"

services:
  backend:
    build:
      context: ./backend
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - media-data:/media
    ports:
      - "8000:8000"
    command: ["/app/start.sh"]

  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
    command: sh -c "npm ci && npm run build"

  caddy:
    image: caddy:2
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_completed_successfully
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frontend/dist:/srv:ro
      - media-data:/media
      - caddy-data:/data
      - caddy-config:/config

volumes:
  postgres-data:
  media-data:
  caddy-data:
  caddy-config:
  frontend-node-modules:
